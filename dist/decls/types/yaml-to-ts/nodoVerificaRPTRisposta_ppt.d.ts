import * as t from "io-ts";
declare const _nodoVerificaRPTRisposta_ppt: t.ExactType<t.IntersectionType<[t.InterfaceType<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}, t.TypeOfProps<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}>, t.OutputOfProps<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}>, t.mixed>, t.PartialType<{}, t.TypeOfPartialProps<{}>, t.OutputOfPartialProps<{}>, t.mixed>], t.TypeOfProps<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}> & t.TypeOfPartialProps<{}>, t.OutputOfProps<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}> & t.OutputOfPartialProps<{}>, t.mixed>, t.TypeOfProps<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}> & t.TypeOfPartialProps<{}>, t.OutputOfProps<{
    nodoVerificaRPTRisposta: t.IntersectionType<[t.Type<import("./risposta_ppt").risposta_ppt, import("./risposta_ppt").risposta_ppt, t.mixed>, t.Type<import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>], import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, import("./risposta_ppt").risposta_ppt & import("./esitoNodoVerificaRPTRisposta_ppt").esitoNodoVerificaRPTRisposta_ppt2, t.mixed>;
}> & t.OutputOfPartialProps<{}>, t.mixed>;
export declare const nodoVerificaRPTRisposta_ppt: t.Type<nodoVerificaRPTRisposta_ppt, nodoVerificaRPTRisposta_ppt, t.mixed>;
export interface nodoVerificaRPTRisposta_ppt extends t.TypeOf<typeof _nodoVerificaRPTRisposta_ppt> {
}
export {};
